








1.
https://stackoverflow.com/questions/715417/converting-from-a-string-to-boolean-in-python

int | bool
Все целые и не равные нулю преобразуются в True, равные нулю в False.

str | bool
Пустые строки оцениваются как False, но все остальное, как True.

 class       bool

| int | 0  | False
| int | 10 | True
| int | -7 | True
| Str | '' | False
| Str | 'c'| True



2.
https://peps.python.org/pep-3111/

В  PEP-3111 предполагается, что Python 3.0 сохраняет некоторые простые возможности интерактивного пользовательского ввода, эквивалентные raw_input(), во встроенном пространстве имен.
В python 2.x функция raw_input() возвращает строку, а функция input() оценивает входные данные в контексте выполнения, в котором она вызывается

в python 3.x вызовы input() поменяются на eval(input()) и raw_input() на input().
python2.x                    python3.x

raw_input()   --------------> input()               
input()  -------------------> eval(input())     

3.
https://peps.python.org/pep-3105/

PEP3105 предлагает новую print() встроенную функцию, которая заменяет print оператор.

softspace функция(полусекретный атрибут в файлах, который в настоящее время используется для указания печати, следует ли вставлять пробел перед первым элементом), будет удален.

Наличие специального синтаксиса print создавало гораздо больший барьер для эволюции, чем новая функция.
Выражения, которые содержит круглые скобки вокруг всех своих аргументов, будет продолжать быть допустимым синтаксисом Python в версии 3.0, и из них только те, которые печатают одно заключенное в скобки значение, будут продолжать делать то же самое.

в версии Python 2.x
>>> print ("Hello")
Hello
>>> print ("Hello", "world")
("Hello", "world")

а  в  3.0:
>>> print ("Hello")
Hello
>>> print ("Hello", "world")
Hello world

